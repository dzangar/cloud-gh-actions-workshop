name: Nurda Zangar ci/cd

on:
  push:
    branches: [ "main" ]  # Trigger on push to 'main' branch

jobs:
  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: npm
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - name: Report Coverage
      uses: davelosert/vitest-coverage-report-action@v2
      if: always()

  package-and-publish:
    needs:
      - build

    name: 🐳 Package & Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step to log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Use your Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}    # Use your Docker Hub token
          run: docker login -u $username -p $password
          
      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/cloud-gh-actions-workshop  # Replace with your Docker Hub repository name
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=sha,event=branch,prefix=,suffix=,format=short
      # - name: build
      #   run: docker build -t dzangar/cloud-gh-actions-workshop:latest .
      # - name: push
      #   run: docker push dzangar/cloud-gh-actions-workshop:latest

      # - name: build and push docker image to registry
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/cloud-gh-actions-workshop:latest
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cloud-gh-actions-workshop:latest  # Replace with your Docker Hub repository name
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max






# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main  # Trigger on push to 'main' branch

# jobs:
#   # Continuous Integration (CI) job
#   ci:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

#   # Continuous Deployment (CD) job
#   cd:
#     runs-on: ubuntu-latest
#     needs: ci  # Ensure CD only runs after CI is successful

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up SSH key
#         run: |
#           echo "$EC2_SSH_PRIVATE_KEY" > private_key.pem
#           chmod 600 private_key.pem
#         env:
#           EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

#       - name: Deploy to EC2
#         run: |
#           ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
#             # Docker commands for deployment
#             cd /home/ubuntu/cloud-gh-actions-workshop
#             sudo docker stop my-container || true
#             sudo docker rm my-container || true
#             sudo docker run -d --name my-container -p 80:8080 my-docker-image:latest
#             sudo docker system prune -f
#           EOF
